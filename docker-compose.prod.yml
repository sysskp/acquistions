version: '3.8'

services:
  # Acquisitions API Application - Production
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: acquisitions-app-prod
    ports:
      - "3000:3000"
    env_file:
      - .env.production
    
    volumes:
      # Production logs (use volume for persistence)
      - app_logs:/app/logs
    
    networks:
      - acquisitions-network
    
    restart: unless-stopped
    
    # Production health check with longer intervals
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    # Resource limits for production
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Read-only root filesystem (except for writable volumes)
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: acquisitions-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - acquisitions-network
    depends_on:
      - app
    restart: unless-stopped
    profiles:
      - nginx # Only start nginx when explicitly requested

networks:
  acquisitions-network:
    driver: bridge
    name: acquisitions-prod-network

volumes:
  app_logs:
    name: acquisitions-app-logs
  nginx_logs:
    name: acquisitions-nginx-logs